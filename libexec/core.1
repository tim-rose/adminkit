.\" CORE.1 --Manual page for "core.shl", core shell library functions
.\"
.\"
.TH core 1 2012-11-22 "Admin Kit" "The Other Manual"
.SH NAME
require, resolve_path, quietly, match, choose, prompt, prompt_ok,
is_user, is_group, argv_or_stdin \- Core adminkit library functions.
.SH LIBRARY
Admin Kit, shell libraries and tools.
.SH SYNOPSIS
.B . core.shl
.SY require
.I library...
.YS
.SY resolve_path
.I path
.I fileglob
.YS
.SY quietly
.I command...
.YS
.SY match
.I string
.I glob
.YS
.SY choose
.I items...
.YS
.SY prompt
.I text
.RI [ default ]
.YS
.SY prompt_ok
.I text
.RI [ default ]
.YS
.SH DESCRIPTION
The
.B core
library contains a bunch of useful functions!
.SH FUNCTIONS
.TP
.BI require\   library...
Load the specified shell library(ies), but once only.
.B require
remembers the libraries that have already been loaded by storing the name
in the
.B shl_loaded
variable.
The files are loaded via the shell's file inclusion mechanism, which
searches for the target files using
.BR PATH .
.TP
.BI resolve_path\  path \  fileglob
Find a file, searching the directories in a specified path list, and output
the matching pathname to
.IR stdout .
The
.I path
value is a colon-separated list of directories, in the same format as other shell path lists (e.g.
.BR PATH ,
.BR MANPATH ,
etc.
The
.I fileglob
value is a filename that can contain the "glob" file wildcards
(e.g. "x*.[ch]").
The first matching file is printed.  File glob
expansions are not guaranteed to be sorted, so this may return
surprising results if more than one could match.  If no match is found,
nothing is printed and
.B resolve_path
returns an error status.
.TP
.BI quietly\  command...
Run the specified command quietly: with both
.I stdout
and
.I stderr
redirected to
.IR /dev/null .
.TP
.BI match\  string \  glob
Matches
.I string
agains the specified 
.I glob
(file wildcard pattern).
Returns true if the pattern matched, false if it didn't.
.TP
.BI choose\  items...
The
.B choose
function presents the supplied list of items one at a time, and
prompts for a yes/no/all/quit response for each of them.  Each of the
items that were selected are printed to
.IR stdout .
If the response is "quit", then
.B choose
will return immediately with a failure (although some selected items
may have already been printed).  For example, to confirm the deletion
of some files:

.EX
rm_confirm()
{
    rm $(choose "$@")
}
.EE
.SH "BUGS"
The adminkit functions are intended to work with both
.BR bash (1)
and
.BR dash (1),
although I haven't tested that yet.


.SH SEE ALSO
.BR bash (1),
.BR dash (1)
