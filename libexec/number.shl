#!/bin/sh
#
# NUMBER.SHL --Shell Library of numeric functions.
#
# Contents:
# abs()        --Output the absolute value of a number.
# min()        --Output the smallest numeric value in a list.
# max()        --Output the largest numeric value in a list.
# num_octets() --Convert a 32 bit number into a dotted list of 4 octets.
# octets_num() --Convert a dotted list of 4 octets into a 32-bit integer.
#

#
# abs() --Output the absolute value of a number.
#
abs()
{
    if [ "$1" -lt 0 ]; then
	echo $((-1*$1))
    else
	echo $1
    fi
} 2>/dev/null 			# ignore squeals from test -lt

#
# min() --Output the smallest numeric value in a list.
#
min()
{
    local min=$1
    local val=

    for val; do
	if [ "$val" -lt "$min" ]; then
	    min=$val
	fi
    done
    echo $min
} 2>/dev/null 			# ignore squeals from test -lt

#
# max() --Output the largest numeric value in a list.
#
max()
{
    local max=$1
    local val=
    for val; do
	if [ "$val" -gt "$max" ]; then
	    max=$val
	fi
    done
    echo $max
} 2>/dev/null			# ignore squeals from test -gt

#
# num_octets() --Convert a 32 bit number into a dotted list of 4 octets.
#
num_octets()
{
    printf "%d.%d.%d.%d\n" \
	$(( $1 >> 24 ))  \
	$(( ( $1 & 0xffffff ) >> 16 )) \
	$(( ( $1 & 0xffff ) >> 8 )) \
	$(( ( $1 & 0xff ) ))
} 2>/dev/null			# ignore squeals from arithmetic eval

#
# octets_num() --Convert a dotted list of 4 octets into a 32-bit integer.
#
octets_num()
(
    IFS=' '			# we're in a sub-shell: IFS is local

    echo $1 | sed -e "s/[.]/ /g" |
    while read o1 o2 o3 o4; do
	echo $(( ( $o1 << 24 ) + ( $o2 << 16 ) + ( $o3 << 8 ) + $o4 )) 
    done
) 2>/dev/null			# ignore squeals from arithmetic eval
